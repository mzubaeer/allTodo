{"ast":null,"code":"import AddNote from './components/AddNote.vue';\nimport Modal from './components/Modal.vue';\nimport Navbar from './components/Navbar.vue';\nimport NotesList from './components/NotesList.vue';\nexport default {\n  components: {\n    Navbar,\n    NotesList,\n    AddNote,\n    Modal\n  },\n  data() {\n    return {\n      isModalOpen: false,\n      notes: [\n        // { id: '1', title: 'audi', text: 'привет мир', date: '09.10.23' },\n        // { id: '2', title: 'tecla', text: 'привет мир', date: '09.10.23' },\n        // { id: '3', title: 'chevrolet', text: 'привет мир', date: '09.10.23' },\n      ],\n      editedNote: null,\n      edit: false,\n      searchVal: ''\n    };\n  },\n  methods: {\n    addNote(note) {\n      this.notes = [...this.notes, note];\n    },\n    delNote(id) {\n      this.notes = this.notes.filter(note => note.id != id);\n      // let index = this.notes.findIndex((note) => { note.id == id })\n      // this.notes.splice(index, 1)\n    },\n\n    change(id) {\n      this.isModalOpen = this.edit = true;\n      let currentNote = this.notes.find(note => note.id == id);\n      this.editedNote = currentNote;\n    },\n    changedNote(newNote) {\n      this.notes.forEach(note => {\n        if (note.id == newNote.id) {\n          note.title = newNote.title;\n          note.text = newNote.text;\n          note.date = newNote.date;\n        }\n      });\n    },\n    getNotes() {\n      let localNotes = localStorage.notes;\n      if (localNotes) {\n        this.notes = JSON.parse(localNotes);\n      }\n    }\n  },\n  mounted() {\n    this.getNotes();\n  },\n  computed: {\n    filterNotes() {\n      return this.searchVal ? this.notes.filter(note => note.title.toLowerCase().includes(this.searchVal.toLowerCase())) : this.notes;\n    }\n  },\n  watch: {\n    notes: {\n      handler() {\n        localStorage.notes = JSON.stringify(this.notes);\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"names":["AddNote","Modal","Navbar","NotesList","components","data","isModalOpen","notes","editedNote","edit","searchVal","methods","addNote","note","delNote","id","filter","change","currentNote","find","changedNote","newNote","forEach","title","text","date","getNotes","localNotes","localStorage","JSON","parse","mounted","computed","filterNotes","toLowerCase","includes","watch","handler","stringify","deep"],"sources":["D:\\zubaer\\vue\\todo\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <Navbar @setSearch=\"searchVal = $event\" />\n    <NotesList :notes=\"filterNotes\" @change=\"change\" @delNote=\"delNote\" />\n    <AddNote @click=\"isModalOpen = true\" />\n    <Modal v-show=\"isModalOpen\" @close=\"isModalOpen = false, edit = false\" @addNote=\"addNote\" :edit=\"edit\"\n      @changedNote=\"changedNote\" :editedNote=\"editedNote\" />\n  </div>\n</template>\n\n<script>\nimport AddNote from './components/AddNote.vue'\nimport Modal from './components/Modal.vue'\nimport Navbar from './components/Navbar.vue'\nimport NotesList from './components/NotesList.vue'\nexport default {\n  components: {\n    Navbar,\n    NotesList,\n    AddNote,\n    Modal\n  },\n\n  data() {\n    return {\n      isModalOpen: false,\n      notes: [\n        // { id: '1', title: 'audi', text: 'привет мир', date: '09.10.23' },\n        // { id: '2', title: 'tecla', text: 'привет мир', date: '09.10.23' },\n        // { id: '3', title: 'chevrolet', text: 'привет мир', date: '09.10.23' },\n      ],\n      editedNote: null,\n      edit: false,\n      searchVal: '',\n    }\n  },\n  methods: {\n    addNote(note) {\n      this.notes = [...this.notes, note]\n    },\n    delNote(id) {\n      this.notes = this.notes.filter((note) => note.id != id)\n      // let index = this.notes.findIndex((note) => { note.id == id })\n      // this.notes.splice(index, 1)\n    },\n    change(id) {\n      this.isModalOpen = this.edit = true\n      let currentNote = this.notes.find(note => note.id == id)\n      this.editedNote = currentNote\n    },\n    changedNote(newNote) {\n      this.notes.forEach((note) => {\n        if (note.id == newNote.id) {\n          note.title = newNote.title\n          note.text = newNote.text\n          note.date = newNote.date\n        }\n      })\n    },\n    getNotes() {\n      let localNotes = localStorage.notes\n      if (localNotes) {\n        this.notes = JSON.parse(localNotes)\n      }\n    }\n  },\n  mounted() {\n    this.getNotes()\n  },\n\n  computed: {\n    filterNotes() {\n      return this.searchVal\n        ? this.notes.filter((note) => note.title.toLowerCase().includes(this.searchVal.toLowerCase())) : this.notes\n    }\n  },\n  watch: {\n    notes: {\n      handler() {\n        localStorage.notes = JSON.stringify(this.notes)\n      },\n      deep: true\n    }\n  }\n}\n</script>\n"],"mappings":"AAWA,OAAOA,OAAM,MAAO,0BAAyB;AAC7C,OAAOC,KAAI,MAAO,wBAAuB;AACzC,OAAOC,MAAK,MAAO,yBAAwB;AAC3C,OAAOC,SAAQ,MAAO,4BAA2B;AACjD,eAAe;EACbC,UAAU,EAAE;IACVF,MAAM;IACNC,SAAS;IACTH,OAAO;IACPC;EACF,CAAC;EAEDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,KAAK;MAClBC,KAAK,EAAE;QACL;QACA;QACA;MAAA,CACD;MACDC,UAAU,EAAE,IAAI;MAChBC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAACC,IAAI,EAAE;MACZ,IAAI,CAACN,KAAI,GAAI,CAAC,GAAG,IAAI,CAACA,KAAK,EAAEM,IAAI;IACnC,CAAC;IACDC,OAAOA,CAACC,EAAE,EAAE;MACV,IAAI,CAACR,KAAI,GAAI,IAAI,CAACA,KAAK,CAACS,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACE,EAAC,IAAKA,EAAE;MACtD;MACA;IACF,CAAC;;IACDE,MAAMA,CAACF,EAAE,EAAE;MACT,IAAI,CAACT,WAAU,GAAI,IAAI,CAACG,IAAG,GAAI,IAAG;MAClC,IAAIS,WAAU,GAAI,IAAI,CAACX,KAAK,CAACY,IAAI,CAACN,IAAG,IAAKA,IAAI,CAACE,EAAC,IAAKA,EAAE;MACvD,IAAI,CAACP,UAAS,GAAIU,WAAU;IAC9B,CAAC;IACDE,WAAWA,CAACC,OAAO,EAAE;MACnB,IAAI,CAACd,KAAK,CAACe,OAAO,CAAET,IAAI,IAAK;QAC3B,IAAIA,IAAI,CAACE,EAAC,IAAKM,OAAO,CAACN,EAAE,EAAE;UACzBF,IAAI,CAACU,KAAI,GAAIF,OAAO,CAACE,KAAI;UACzBV,IAAI,CAACW,IAAG,GAAIH,OAAO,CAACG,IAAG;UACvBX,IAAI,CAACY,IAAG,GAAIJ,OAAO,CAACI,IAAG;QACzB;MACF,CAAC;IACH,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,IAAIC,UAAS,GAAIC,YAAY,CAACrB,KAAI;MAClC,IAAIoB,UAAU,EAAE;QACd,IAAI,CAACpB,KAAI,GAAIsB,IAAI,CAACC,KAAK,CAACH,UAAU;MACpC;IACF;EACF,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR,IAAI,CAACL,QAAQ,CAAC;EAChB,CAAC;EAEDM,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACvB,SAAQ,GAChB,IAAI,CAACH,KAAK,CAACS,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACU,KAAK,CAACW,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACzB,SAAS,CAACwB,WAAW,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC3B,KAAI;IAC9G;EACF,CAAC;EACD6B,KAAK,EAAE;IACL7B,KAAK,EAAE;MACL8B,OAAOA,CAAA,EAAG;QACRT,YAAY,CAACrB,KAAI,GAAIsB,IAAI,CAACS,SAAS,CAAC,IAAI,CAAC/B,KAAK;MAChD,CAAC;MACDgC,IAAI,EAAE;IACR;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}