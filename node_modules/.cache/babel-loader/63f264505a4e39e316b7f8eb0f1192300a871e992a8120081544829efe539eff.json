{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_NotesList = _resolveComponent(\"NotesList\");\n  const _component_AddNote = _resolveComponent(\"AddNote\");\n  const _component_Modal = _resolveComponent(\"Modal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar, {\n    onSetSearch: _cache[0] || (_cache[0] = $event => $data.searchVal = $event)\n  }), _createVNode(_component_NotesList, {\n    notes: $options.filterNotes,\n    onChange: $options.change,\n    onDelNote: $options.delNote\n  }, null, 8, [\"notes\", \"onChange\", \"onDelNote\"]), _createVNode(_component_AddNote, {\n    onClick: _cache[1] || (_cache[1] = $event => $data.isModalOpen = true)\n  }), _withDirectives(_createVNode(_component_Modal, {\n    onClose: _cache[2] || (_cache[2] = $event => ($data.isModalOpen = false, $data.edit = false)),\n    onAddNote: $options.addNote,\n    edit: $data.edit,\n    onChangedNote: $options.changedNote,\n    editedNote: $data.editedNote\n  }, null, 8, [\"onAddNote\", \"edit\", \"onChangedNote\", \"editedNote\"]), [[_vShow, $data.isModalOpen]])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","onSetSearch","_cache","$event","$data","searchVal","_component_NotesList","notes","$options","filterNotes","onChange","change","onDelNote","delNote","_component_AddNote","onClick","isModalOpen","_component_Modal","onClose","edit","onAddNote","addNote","onChangedNote","changedNote","editedNote"],"sources":["D:\\zubaer\\vue\\todo\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <Navbar @setSearch=\"searchVal = $event\" />\n    <NotesList :notes=\"filterNotes\" @change=\"change\" @delNote=\"delNote\" />\n    <AddNote @click=\"isModalOpen = true\" />\n    <Modal v-show=\"isModalOpen\" @close=\"isModalOpen = false, edit = false\" @addNote=\"addNote\" :edit=\"edit\"\n      @changedNote=\"changedNote\" :editedNote=\"editedNote\" />\n  </div>\n</template>\n\n<script>\nimport AddNote from './components/AddNote.vue'\nimport Modal from './components/Modal.vue'\nimport Navbar from './components/Navbar.vue'\nimport NotesList from './components/NotesList.vue'\nexport default {\n  components: {\n    Navbar,\n    NotesList,\n    AddNote,\n    Modal\n  },\n\n  data() {\n    return {\n      isModalOpen: false,\n      notes: [\n        // { id: '1', title: 'audi', text: 'привет мир', date: '09.10.23' },\n        // { id: '2', title: 'tecla', text: 'привет мир', date: '09.10.23' },\n        // { id: '3', title: 'chevrolet', text: 'привет мир', date: '09.10.23' },\n      ],\n      editedNote: null,\n      edit: false,\n      searchVal: '',\n    }\n  },\n  methods: {\n    addNote(note) {\n      this.notes = [...this.notes, note]\n    },\n    delNote(id) {\n      this.notes = this.notes.filter((note) => note.id != id)\n      // let index = this.notes.findIndex((note) => { note.id == id })\n      // this.notes.splice(index, 1)\n    },\n    change(id) {\n      this.isModalOpen = this.edit = true\n      let currentNote = this.notes.find(note => note.id == id)\n      this.editedNote = currentNote\n    },\n    changedNote(newNote) {\n      this.notes.forEach((note) => {\n        if (note.id == newNote.id) {\n          note.title = newNote.title\n          note.text = newNote.text\n          note.date = newNote.date\n        }\n      })\n    },\n    getNotes() {\n      let localNotes = localStorage.notes\n      if (localNotes) {\n        this.notes = JSON.parse(localNotes)\n      }\n    }\n  },\n  mounted() {\n    this.getNotes()\n  },\n\n  computed: {\n    filterNotes() {\n      return this.searchVal\n        ? this.notes.filter((note) => note.title.toLowerCase().includes(this.searchVal.toLowerCase())) : this.notes\n    }\n  },\n  watch: {\n    notes: {\n      handler() {\n        localStorage.notes = JSON.stringify(this.notes)\n      },\n      deep: true\n    }\n  }\n}\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;;;;;uBAApBC,mBAAA,CAMM,OANNC,UAMM,GALJC,YAAA,CAA0CC,iBAAA;IAAjCC,WAAS,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,SAAS,GAAGF,MAAM;MACtCJ,YAAA,CAAsEO,oBAAA;IAA1DC,KAAK,EAAEC,QAAA,CAAAC,WAAW;IAAGC,QAAM,EAAEF,QAAA,CAAAG,MAAM;IAAGC,SAAO,EAAEJ,QAAA,CAAAK;mDAC3Dd,YAAA,CAAuCe,kBAAA;IAA7BC,OAAK,EAAAb,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAY,WAAW;sBAC5BjB,YAAA,CACwDkB,gBAAA;IAD3BC,OAAK,EAAAhB,MAAA,QAAAA,MAAA,MAAAC,MAAA,KAAEC,KAAA,CAAAY,WAAW,UAAUZ,KAAA,CAAAe,IAAI;IAAWC,SAAO,EAAEZ,QAAA,CAAAa,OAAO;IAAGF,IAAI,EAAEf,KAAA,CAAAe,IAAI;IAClGG,aAAW,EAAEd,QAAA,CAAAe,WAAW;IAAGC,UAAU,EAAEpB,KAAA,CAAAoB;+EAD3BpB,KAAA,CAAAY,WAAW,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}